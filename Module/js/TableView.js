// The default code is a module class (inherited from xui.Module)
// Ensure that all the value of "key/value pair" does not refer to external variables
// Sub module don't support async functions
xui.Class('Module.TableView', 'xui.Module',{
    Instance:{
        // Dependencies css
        Dependencies: [],
        // Required modules
        Required:[],
        // To initialize properties
        properties : {},

        // To initialize instance(e.g. properties)
        initialize : function(){
        },

        // To initialize internal components (mostly UI controls)
        // *** If you're not a skilled, dont modify this function manually ***
        iniComponents : function(){
            // [[Code created by CrossUI RAD Studio
            var host=this, children=[], append=function(child){children.push(child.get(0));};
            
            append(
                xui.create("xui.UI.TreeGrid")
                .setHost(host,"xui_ui_treegrid21")
                .setDirtyMark(false)
                .setLeft("0em")
                .setTop("0em")
                .setRowNumbered(true)
                .setEditable(true)
                .setColHidable(true)
                .setColSortable(false)
                .setTagCmds([
                    {
                        "id":"del",
                        "type":"text",
                        "location":"left",
                        "itemClass":"xuicon xui-uicmd-close",
                        "tag":"row"
                    }
                ])
                .setHotRowMode("before")
                .beforeHotRowAdded({
                    "return":"{false}",
                    "actions":[
                        {
                            "desc":"addRow",
                            "type":"page",
                            "target":"App",
                            "args":[
                                "{page.postMessage()}",
                                undefined,
                                undefined,
                                "addDoc",
                                "{page.properties.path}",
                                "{args[1]}",
                                "{page.functions.addRow}",
                                ""
                            ],
                            "method":"postMessage",
                            "redirection":"page::"
                        }
                    ]
                })
                .onCmd([
                    {
                        "desc":"confirm",
                        "type":"other",
                        "target":"msg",
                        "args":[
                            "Confirm",
                            "Do you want to delete this document?"
                        ],
                        "method":"confirm",
                        "okFlag":"_confirm_yes",
                        "koFlag":"_confirm_no",
                        "onOK":2,
                        "onKO":3,
                        "conditions":[
                            {
                                "left":"{args[2]}",
                                "symbol":"=",
                                "right":"del"
                            }
                        ],
                        "event":3
                    },
                    {
                        "desc":"del",
                        "type":"page",
                        "target":"App",
                        "args":[
                            "{page.postMessage()}",
                            undefined,
                            undefined,
                            "delDoc",
                            "{page.properties.path}",
                            "{args[1].id}",
                            "{page.functions.delRow}",
                            ""
                        ],
                        "method":"postMessage",
                        "conditions":[
                            {
                                "left":"{args[2]}",
                                "symbol":"=",
                                "right":"del"
                            },
                            {
                                "left":"{temp._confirm_yes}",
                                "symbol":"defined",
                                "right":""
                            }
                        ],
                        "event":3,
                        "redirection":"page::"
                    }
                ])
                .afterCellUpdated([
                    {
                        "desc":"if hotrow",
                        "type":"none",
                        "target":"none",
                        "args":[ ],
                        "method":"none",
                        "conditions":[
                            {
                                "left":"{args[3]}",
                                "symbol":"=",
                                "right":"{true}"
                            }
                        ],
                        "return":false
                    },
                    {
                        "desc":"get data",
                        "type":"control",
                        "target":"xui_ui_treegrid21",
                        "args":[
                            "{page.xui_ui_treegrid21.getCell()}",
                            "temp",
                            "map",
                            "{args[1]}",
                            "map"
                        ],
                        "method":"getCell",
                        "redirection":"other:callback:call"
                    },
                    {
                        "desc":"update msg",
                        "type":"page",
                        "target":"App",
                        "args":[
                            "{page.postMessage()}",
                            "none",
                            "",
                            "updateDoc",
                            "{page.properties.path}",
                            "{temp.map}",
                            "{args[5].id}",
                            "",
                            ""
                        ],
                        "method":"postMessage",
                        "redirection":"page::"
                    }
                ])
            );
            
            append(
                xui.create("xui.UI.Block")
                .setHost(host,"xui_ui_block38")
                .setDock("bottom")
                .setLeft("18.333333333333332em")
                .setTop("15.833333333333334em")
                .setHeight("3.3333333333333335em")
            );
            
            host.xui_ui_block38.append(
                xui.create("xui.UI.HTMLButton")
                .setHost(host,"xui_prevpage")
                .setLeft("11.666666666666666em")
                .setTop("0.5em")
                .setWidth("9.166666666666666em")
                .setHeight("2.5em")
                .setCaption("< Prevoius Page")
                .onClick([
                    {
                        "desc":"get wheres",
                        "type":"other",
                        "target":"callback",
                        "args":[
                            "{page.functions.getWheres}",
                            "temp",
                            "wheres"
                        ],
                        "method":"call",
                        "event":1
                    },
                    {
                        "desc":"get first row",
                        "type":"control",
                        "target":"xui_ui_treegrid21",
                        "args":[
                            "{page.xui_ui_treegrid21.getRowMap()}",
                            "temp",
                            "firstRow",
                            "{1}"
                        ],
                        "method":"getRowMap",
                        "redirection":"other:callback:call",
                        "event":1
                    },
                    {
                        "desc":"get first doc",
                        "type":"other",
                        "target":"var",
                        "args":[
                            "firstDoc",
                            "{temp.firstRow.__row__doc}"
                        ],
                        "method":"temp"
                    },
                    {
                        "desc":"send msg",
                        "type":"page",
                        "target":"App",
                        "args":[
                            "{page.postMessage()}",
                            "none",
                            "",
                            "refreshDocs",
                            "{page.properties.path}",
                            "",
                            "",
                            "",
                            "{temp.firstDoc}",
                            "{temp.wherew}",
                            "",
                            "{page.functions.setResult}"
                        ],
                        "method":"postMessage",
                        "redirection":"page::"
                    }
                ])
            );
            
            host.xui_ui_block38.append(
                xui.create("xui.UI.HTMLButton")
                .setHost(host,"xui_nextpage")
                .setLeft("22.5em")
                .setTop("0.5em")
                .setWidth("9.166666666666666em")
                .setHeight("2.5em")
                .setCaption("Next Page >")
                .onClick([
                    {
                        "desc":"get wheres",
                        "type":"other",
                        "target":"callback",
                        "args":[
                            "{page.functions.getWheres}",
                            "temp",
                            "wheres"
                        ],
                        "method":"call",
                        "event":1
                    },
                    {
                        "desc":"rows",
                        "type":"other",
                        "target":"var",
                        "args":[
                            "rowscount",
                            "{page.xui_ui_treegrid21.getRows().length}"
                        ],
                        "method":"temp",
                        "event":1
                    },
                    {
                        "desc":"get last row",
                        "type":"control",
                        "target":"xui_ui_treegrid21",
                        "args":[
                            "{page.xui_ui_treegrid21.getRowMap()}",
                            "temp",
                            "lastRow",
                            "{eval(temp.rowscount-1)}"
                        ],
                        "method":"getRowMap",
                        "redirection":"other:callback:call"
                    },
                    {
                        "desc":"get last doc",
                        "type":"other",
                        "target":"var",
                        "args":[
                            "lastDoc",
                            "{temp.lastRow.__row__doc}"
                        ],
                        "method":"temp"
                    },
                    {
                        "desc":"send msg",
                        "type":"page",
                        "target":"App",
                        "args":[
                            "{page.postMessage()}",
                            "none",
                            "",
                            "refreshDocs",
                            "{page.properties.path}",
                            "",
                            "",
                            "{temp.lastDoc}",
                            "",
                            "{temp.wheres}",
                            "",
                            "{page.functions.setResult}"
                        ],
                        "method":"postMessage",
                        "redirection":"page::"
                    }
                ])
            );
            
            host.xui_ui_block38.append(
                xui.create("xui.UI.HTMLButton")
                .setHost(host,"xui_ui_htmlbutton15")
                .setLeft("0.8333333333333334em")
                .setTop("0.5em")
                .setWidth("9.166666666666666em")
                .setHeight("2.5em")
                .setCaption("<< First page")
                .onClick([
                    {
                        "desc":"get wheres",
                        "type":"other",
                        "target":"callback",
                        "args":[
                            "{page.functions.getWheres}",
                            "temp",
                            "wheres"
                        ],
                        "method":"call",
                        "event":1
                    },
                    {
                        "desc":"send msg",
                        "type":"page",
                        "target":"App",
                        "args":[
                            "{page.postMessage()}",
                            "none",
                            "",
                            "refreshDocs",
                            "{page.properties.path}",
                            "",
                            "",
                            "",
                            "",
                            "{temp.wheres}",
                            "",
                            "{page.functions.setResult}"
                        ],
                        "method":"postMessage",
                        "redirection":"page::",
                        "event":1
                    }
                ])
            );
            
            host.xui_ui_block38.append(
                xui.create("xui.UI.HTMLButton")
                .setHost(host,"xui_ui_htmlbutton16")
                .setLeft("32.5em")
                .setTop("0.5em")
                .setWidth("9.166666666666666em")
                .setHeight("2.5em")
                .setCaption("Last Page >>")
                .onClick([
                    {
                        "desc":"get wheres",
                        "type":"other",
                        "target":"callback",
                        "args":[
                            "{page.functions.getWheres}",
                            "temp",
                            "wheres"
                        ],
                        "method":"call",
                        "event":1
                    },
                    {
                        "desc":"send msg",
                        "type":"page",
                        "target":"App",
                        "args":[
                            "{page.postMessage()}",
                            "none",
                            "",
                            "refreshDocs",
                            "{page.properties.path}",
                            "",
                            "{-1}",
                            "",
                            "",
                            "{temp.wheres}",
                            "",
                            "{page.functions.setResult}"
                        ],
                        "method":"postMessage",
                        "redirection":"page::",
                        "event":1
                    }
                ])
            );
            
            append(
                xui.create("xui.UI.Block")
                .setHost(host,"xui_ui_block41")
                .setDock("top")
                .setLeft("19.166666666666668em")
                .setTop("16.666666666666668em")
                .setHeight("6.5em")
            );
            
            host.xui_ui_block41.append(
                xui.create("xui.UI.Group")
                .setHost(host,"xui_ui_group1")
                .setLeft("0.8333333333333334em")
                .setTop("0em")
                .setWidth("45.833333333333336em")
                .setHeight("6.083333333333333em")
                .setOverflow("hidden")
                .setCaption("Query")
                .setToggleBtn(false)
            );
            
            host.xui_ui_group1.append(
                xui.create("xui.UI.ComboInput")
                .setHost(host,"xui_ui_input3")
                .setDirtyMark(false)
                .setShowDirtyMark(false)
                .setLeft("0.8333333333333334em")
                .setTop("0em")
                .setWidth("8.333333333333334em")
                .setHeight("4em")
                .setLabelSize("2em")
                .setLabelPos("top")
                .setLabelCaption("value 1")
                .setLabelHAlign("center")
                .setType("input")
            );
            
            host.xui_ui_group1.append(
                xui.create("xui.UI.ComboInput")
                .setHost(host,"xui_ui_input2")
                .setDirtyMark(false)
                .setShowDirtyMark(false)
                .setLeft("10em")
                .setTop("0em")
                .setWidth("9em")
                .setHeight("4em")
                .setLabelSize("2em")
                .setLabelPos("top")
                .setLabelCaption("comparison 1")
                .setLabelHAlign("center")
                .setType("listbox")
                .setItems([
                    {
                        "id":"none",
                        "caption":" "
                    },
                    {
                        "id":">",
                        "caption":"<"
                    },
                    {
                        "id":">=",
                        "caption":"<="
                    },
                    {
                        "id":"==",
                        "caption":"=="
                    },
                    {
                        "id":"array-contains",
                        "caption":"array-contains"
                    }
                ])
                .onChange([
                    {
                        "desc":"clear 1",
                        "type":"control",
                        "target":"xui_ui_input3",
                        "args":[
                            "{page.xui_ui_input3.setUIValue()}",
                            undefined,
                            undefined,
                            "{null}"
                        ],
                        "method":"setUIValue",
                        "redirection":"other:callback:call"
                    },
                    {
                        "desc":"clear 2",
                        "type":"control",
                        "target":"xui_ui_comboinput27",
                        "args":[
                            "{page.xui_ui_comboinput27.setUIValue()}",
                            undefined,
                            undefined,
                            "{null}"
                        ],
                        "method":"setUIValue",
                        "conditions":[
                            {
                                "left":"{args[2]}",
                                "symbol":"inlist",
                                "right":"==,array_contains"
                            }
                        ],
                        "redirection":"other:callback:call"
                    },
                    {
                        "desc":"clear 3",
                        "type":"control",
                        "target":"xui_ui_comboinput27",
                        "args":[
                            "{page.xui_ui_comboinput27.setUIValue()}",
                            undefined,
                            undefined,
                            "{null}"
                        ],
                        "method":"setUIValue",
                        "conditions":[
                            {
                                "left":"{args[2]}",
                                "symbol":"inlist",
                                "right":"==,array_contains"
                            }
                        ],
                        "redirection":"other:callback:call"
                    },
                    {
                        "desc":"disable 1",
                        "type":"control",
                        "target":"xui_ui_comboinput27",
                        "args":[ ],
                        "method":"disable",
                        "conditions":[
                            {
                                "left":"{args[2]}",
                                "symbol":"inlist",
                                "right":"==,array_contains"
                            }
                        ]
                    },
                    {
                        "desc":"disable 2",
                        "type":"control",
                        "target":"xui_ui_comboinput35",
                        "args":[ ],
                        "method":"disable",
                        "conditions":[
                            {
                                "left":"{args[2]}",
                                "symbol":"inlist",
                                "right":"==,array_contains"
                            }
                        ]
                    },
                    {
                        "desc":"enable 1",
                        "type":"control",
                        "target":"xui_ui_comboinput27",
                        "args":[ ],
                        "method":"enable",
                        "conditions":[
                            {
                                "left":"{args[2]}",
                                "symbol":"exlist",
                                "right":"==,array_contains"
                            }
                        ]
                    },
                    {
                        "desc":"enable 2",
                        "type":"control",
                        "target":"xui_ui_comboinput35",
                        "args":[ ],
                        "method":"enable",
                        "conditions":[
                            {
                                "left":"{args[2]}",
                                "symbol":"exlist",
                                "right":"==,array_contains"
                            }
                        ]
                    }
                ])
            );
            
            host.xui_ui_group1.append(
                xui.create("xui.UI.ComboInput")
                .setHost(host,"xui_ui_input1")
                .setDirtyMark(false)
                .setShowDirtyMark(false)
                .setLeft("20em")
                .setTop("0em")
                .setWidth("8.333333333333334em")
                .setHeight("4em")
                .setLabelSize("2em")
                .setLabelPos("top")
                .setLabelCaption("field")
                .setLabelHAlign("center")
                .setType("listbox")
                .onChange([
                    {
                        "desc":"if numb",
                        "type":"control",
                        "target":"xui_ui_comboinput35",
                        "args":[
                            { },
                            {
                                "type":"{args[5].type}"
                            }
                        ],
                        "method":"setProperties",
                        "conditions":[
                            {
                                "left":"{args[5].type}",
                                "symbol":"inlist",
                                "right":"number;spin;counter;currency"
                            }
                        ]
                    },
                    {
                        "desc":"if numb 2",
                        "type":"control",
                        "target":"xui_ui_input3",
                        "args":[
                            { },
                            {
                                "type":"{args[5].type}"
                            }
                        ],
                        "method":"setProperties",
                        "conditions":[
                            {
                                "left":"{args[5].type}",
                                "symbol":"inlist",
                                "right":"number;spin;counter;currency"
                            }
                        ]
                    },
                    {
                        "desc":"if not mumb",
                        "type":"control",
                        "target":"xui_ui_comboinput35",
                        "args":[
                            { },
                            {
                                "type":"input"
                            }
                        ],
                        "method":"setProperties",
                        "conditions":[
                            {
                                "left":"{args[5].type}",
                                "symbol":"exlist",
                                "right":"number;spin;counter;currency"
                            }
                        ]
                    },
                    {
                        "desc":"if not mumb 2",
                        "type":"control",
                        "target":"xui_ui_input3",
                        "args":[
                            { },
                            {
                                "type":"input"
                            }
                        ],
                        "method":"setProperties",
                        "conditions":[
                            {
                                "left":"{args[5].type}",
                                "symbol":"exlist",
                                "right":"number;spin;counter;currency"
                            }
                        ]
                    }
                ])
            );
            
            host.xui_ui_group1.append(
                xui.create("xui.UI.ComboInput")
                .setHost(host,"xui_ui_comboinput27")
                .setDirtyMark(false)
                .setShowDirtyMark(false)
                .setLeft("29.166666666666668em")
                .setTop("0em")
                .setWidth("6.666666666666667em")
                .setHeight("4em")
                .setLabelSize("2em")
                .setLabelPos("top")
                .setLabelCaption("comparison 2")
                .setLabelHAlign("center")
                .setType("listbox")
                .setItems([
                    {
                        "id":"none",
                        "caption":" "
                    },
                    {
                        "id":"<",
                        "caption":"<"
                    },
                    {
                        "id":"<=",
                        "caption":"<="
                    }
                ])
            );
            
            host.xui_ui_group1.append(
                xui.create("xui.UI.ComboInput")
                .setHost(host,"xui_ui_comboinput35")
                .setDirtyMark(false)
                .setShowDirtyMark(false)
                .setLeft("36.666666666666664em")
                .setTop("0em")
                .setWidth("8.333333333333334em")
                .setHeight("4em")
                .setLabelSize("2em")
                .setLabelPos("top")
                .setLabelCaption("value 2")
                .setLabelHAlign("center")
                .setType("input")
            );
            
            host.xui_ui_block41.append(
                xui.create("xui.UI.Icon")
                .setHost(host,"xui_ui_icon2")
                .setLeft("45em")
                .setTop("-0.25em")
                .setImageClass("xui-uicmd-delete")
                .setIconFontSize("2em")
                .onClick([
                    {
                        "desc":"clear 1",
                        "type":"control",
                        "target":"xui_ui_input3",
                        "args":[
                            "{page.xui_ui_input3.setUIValue()}",
                            undefined,
                            undefined,
                            "{null}"
                        ],
                        "method":"setUIValue",
                        "redirection":"other:callback:call"
                    },
                    {
                        "desc":"clear 2",
                        "type":"control",
                        "target":"xui_ui_input2",
                        "args":[
                            "{page.xui_ui_input2.setUIValue()}",
                            undefined,
                            undefined,
                            "{null}"
                        ],
                        "method":"setUIValue",
                        "redirection":"other:callback:call"
                    },
                    {
                        "desc":"clear 3",
                        "type":"control",
                        "target":"xui_ui_input1",
                        "args":[
                            "{page.xui_ui_input1.setUIValue()}",
                            undefined,
                            undefined,
                            "{null}"
                        ],
                        "method":"setUIValue",
                        "redirection":"other:callback:call"
                    },
                    {
                        "desc":"clear 4",
                        "type":"control",
                        "target":"xui_ui_comboinput27",
                        "args":[
                            "{page.xui_ui_comboinput27.setUIValue()}",
                            undefined,
                            undefined,
                            "{null}"
                        ],
                        "method":"setUIValue",
                        "redirection":"other:callback:call"
                    },
                    {
                        "desc":"clear 5",
                        "type":"control",
                        "target":"xui_ui_comboinput35",
                        "args":[
                            "{page.xui_ui_comboinput35.setUIValue()}",
                            undefined,
                            undefined,
                            "{null}"
                        ],
                        "method":"setUIValue",
                        "redirection":"other:callback:call"
                    }
                ])
            );
            
            host.xui_ui_block41.append(
                xui.create("xui.UI.HTMLButton")
                .setHost(host,"xui_ui_btn_refresh")
                .setLeft("48.333333333333336em")
                .setTop("2.6666666666666665em")
                .setWidth("5.833333333333333em")
                .setHeight("2.8333333333333335em")
                .setCaption("Refresh")
                .onClick([
                    {
                        "desc":"get whres",
                        "type":"other",
                        "target":"callback",
                        "args":[
                            "{page.functions.getWheres}",
                            "temp",
                            "wheres"
                        ],
                        "method":"call",
                        "event":1
                    },
                    {
                        "desc":"search",
                        "type":"page",
                        "target":"App",
                        "args":[
                            "{page.postMessage()}",
                            "none",
                            "",
                            "refreshDocs",
                            "{page.properties.path}",
                            "{false}",
                            undefined,
                            undefined,
                            undefined,
                            "{temp.wheres}",
                            undefined,
                            "{page.functions.setResult}"
                        ],
                        "method":"postMessage",
                        "redirection":"page::",
                        "event":1
                    }
                ])
            );
            
            return children;
            // ]]Code created by CrossUI RAD Studio
        },
        // To determine how properties affects this module
        propSetAction : function(prop){
        },
        functions:{
            "getWheres":{
                "desc":"",
                "params":[ ],
                "actions":[
                    {
                        "desc":"make wheres",
                        "type":"other",
                        "target":"var",
                        "args":[
                            "wheres",
                            []],
                            "method":"temp"
                        },
                        {
                            "desc":"set wheres1",
                            "type":"other",
                            "target":"var",
                            "args":[
                                "wheres[0]",
                                {
                                    "left":"{page.xui_ui_input1.getValue()}",
                                    "symbol":"{page.xui_ui_input2.getValue()}",
                                    "right":"{page.xui_ui_input3.getValue()}"
                                }
                            ],
                            "method":"temp",
                            "conditions":[
                                {
                                    "left":"{page.xui_ui_input1.getValue()}",
                                    "symbol":"non-empty",
                                    "right":""
                                },
                                {
                                    "left":"{page.xui_ui_input2.getValue()}",
                                    "symbol":"non-empty",
                                    "right":""
                                },
                                {
                                    "left":"{page.xui_ui_input3.getValue()}",
                                    "symbol":"non-empty",
                                    "right":""
                                }
                            ]
                        },
                        {
                            "desc":"set wheres2",
                            "type":"other",
                            "target":"var",
                            "args":[
                                "wheres[1]",
                                {
                                    "left":"{page.xui_ui_input1.getValue()}",
                                    "symbol":"{page.xui_ui_comboinput27.getValue()}",
                                    "right":"{page.xui_ui_comboinput35.getValue()}"
                                }
                            ],
                            "method":"temp",
                            "conditions":[
                                {
                                    "left":"{page.xui_ui_input1.getValue()}",
                                    "symbol":"non-empty",
                                    "right":""
                                },
                                {
                                    "left":"{page.xui_ui_comboinput27.getValue()}",
                                    "symbol":"non-empty",
                                    "right":""
                                },
                                {
                                    "left":"{page.xui_ui_comboinput35.getValue()}",
                                    "symbol":"non-empty",
                                    "right":""
                                }
                            ]
                        }
                    ],
                    "return":"{temp.wheres}"
                },
                "setResult":{
                    "desc":"",
                    "params":[
                        {
                            "id":"req",
                            "type":"String",
                            "desc":""
                        },
                        {
                            "id":"collection",
                            "type":"String",
                            "desc":""
                        },
                        {
                            "id":"docs",
                            "type":"Array",
                            "desc":""
                        },
                        {
                            "id":"schema",
                            "type":"Hash",
                            "desc":""
                        },
                        {
                            "id":"page_size",
                            "type":"Number",
                            "desc":""
                        },
                        {
                            "id":"pageLocation",
                            "type":"String",
                            "desc":""
                        }
                    ],
                    "actions":[
                        {
                            "desc":"set grid columns",
                            "type":"control",
                            "target":"xui_ui_treegrid21",
                            "args":[
                                { },
                                {
                                    "header":"{args[3].prop}"
                                }
                            ],
                            "method":"setProperties",
                            "conditions":[
                                {
                                    "left":"{args[3]}",
                                    "symbol":"non-empty",
                                    "right":""
                                }
                            ]
                        },
                        {
                            "desc":"set query keys",
                            "type":"control",
                            "target":"xui_ui_input1",
                            "args":[
                                "{page.xui_ui_input1.setItems()}",
                                undefined,
                                undefined,
                                "{args[3].prop}"
                            ],
                            "method":"setItems",
                            "conditions":[
                                {
                                    "left":"{args[3]}",
                                    "symbol":"non-empty",
                                    "right":""
                                }
                            ],
                            "redirection":"other:callback:call"
                        },
                        {
                            "desc":"check btn1",
                            "type":"control",
                            "target":"xui_prevpage",
                            "args":[ ],
                            "method":"disable",
                            "conditions":[
                                {
                                    "left":"{args[5]}",
                                    "symbol":"inlist",
                                    "right":"solo;first;veryfirst"
                                }
                            ]
                        },
                        {
                            "desc":"check btn1",
                            "type":"control",
                            "target":"xui_prevpage",
                            "args":[ ],
                            "method":"enable",
                            "conditions":[
                                {
                                    "left":"{args[5]}",
                                    "symbol":"exlist",
                                    "right":"solo;first;veryfirst"
                                }
                            ]
                        },
                        {
                            "desc":"check btn1",
                            "type":"control",
                            "target":"xui_nextpage",
                            "args":[ ],
                            "method":"disable",
                            "conditions":[
                                {
                                    "left":"{args[5]}",
                                    "symbol":"inlist",
                                    "right":"solo;last;verylast"
                                }
                            ]
                        },
                        {
                            "desc":"check btn1",
                            "type":"control",
                            "target":"xui_nextpage",
                            "args":[ ],
                            "method":"enable",
                            "conditions":[
                                {
                                    "left":"{args[5]}",
                                    "symbol":"exlist",
                                    "right":"solo;last;verylast"
                                }
                            ]
                        },
                        {
                            "desc":"set ref",
                            "type":"other",
                            "target":"var",
                            "args":[
                                "firstRef",
                                "{args[6]}"
                            ],
                            "method":"page.properties"
                        },
                        {
                            "desc":"set ref2",
                            "type":"other",
                            "target":"var",
                            "args":[
                                "lastRef",
                                "{args[7]}"
                            ],
                            "method":"page.properties"
                        },
                        {
                            "desc":"check very",
                            "type":"none",
                            "target":"none",
                            "args":[ ],
                            "method":"none",
                            "conditions":[
                                {
                                    "left":"{args[5]}",
                                    "symbol":"inlist",
                                    "right":"veryfirst;verylast"
                                }
                            ],
                            "return":false
                        },
                        {
                            "desc":"set grid rows",
                            "type":"control",
                            "target":"xui_ui_treegrid21",
                            "args":[
                                "{page.xui_ui_treegrid21.setRawData()}",
                                undefined,
                                undefined,
                                "{args[2]}"
                            ],
                            "method":"setRawData",
                            "redirection":"other:callback:call",
                            "conditions":[
                                {
                                    "left":"{args[5]}",
                                    "symbol":"exlist",
                                    "right":"veryfirst;verylast"
                                }
                            ]
                        },
                        {
                            "desc":"ensure hot row",
                            "type":"control",
                            "target":"xui_ui_treegrid21",
                            "args":[
                                "{page.xui_ui_treegrid21.addHotRow()}"
                            ],
                            "method":"addHotRow",
                            "redirection":"other:callback:call",
                            "conditions":[
                                {
                                    "left":"{args[5]}",
                                    "symbol":"exlist",
                                    "right":"veryfirst;verylast"
                                }
                            ]
                        }
                    ]
                },
                "addRow":{
                    "desc":"",
                    "params":[
                        {
                            "id":"a",
                            "type":"String",
                            "desc":""
                        },
                        {
                            "id":"b",
                            "type":"String",
                            "desc":""
                        },
                        {
                            "id":"doc",
                            "type":"Object",
                            "desc":""
                        },
                        {
                            "id":"docId",
                            "type":"String",
                            "desc":""
                        }
                    ],
                    "actions":[
                        {
                            "desc":"log",
                            "type":"other",
                            "target":"msg",
                            "args":[
                                "{args}"
                            ],
                            "method":"log"
                        },
                        {
                            "desc":"temp",
                            "type":"other",
                            "target":"var",
                            "args":[
                                "row",
                                "{args[2]}"
                            ],
                            "method":"temp"
                        },
                        {
                            "desc":"add row id",
                            "type":"other",
                            "target":"var",
                            "args":[
                                "row.__row__id",
                                "{args[3]}"
                            ],
                            "method":"temp"
                        },
                        {
                            "desc":"addRow",
                            "type":"control",
                            "target":"xui_ui_treegrid21",
                            "args":[
                                "{temp.row}",
                                null,
                                null,
                                true
                            ],
                            "method":"insertMapRows"
                        },
                        {
                            "desc":"focus",
                            "type":"control",
                            "target":"xui_ui_treegrid21",
                            "args":[
                                "{page.xui_ui_treegrid21.focusHotRow()}",
                                undefined,
                                undefined,
                                ""
                            ],
                            "method":"focusHotRow",
                            "redirection":"other:callback:call"
                        }
                    ]
                },
                "delRow":{
                    "desc":"",
                    "params":[
                        {
                            "id":"a",
                            "type":"String",
                            "desc":""
                        },
                        {
                            "id":"b",
                            "type":"String",
                            "desc":""
                        },
                        {
                            "id":"docId",
                            "type":"String",
                            "desc":""
                        }
                    ],
                    "actions":[
                        {
                            "desc":"delItem",
                            "type":"control",
                            "target":"xui_ui_treegrid21",
                            "args":[
                                "{args[2]}"
                            ],
                            "method":"removeRows"
                        }
                    ]
                }
            }
            
             
    },
    // export
    Static:{
        $DataModel:{
        },
        $EventHandlers:{
        },
        $Functions:{
        }
    }
});